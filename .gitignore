# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
env/
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
Pipfile.lock

# poetry
poetry.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
ENV/
env.bak/
venv/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# System files
.DS_Store
Thumbs.db

# Windows
*.bat
*.exe
*.dll
*.pdb
*.lib
*.obj
*.suo
*.sdf
*.cache
*.log
*.vspscc
*.vssscc
*.user
*.sln
*.swp

# Model and large files
*.pt
*.h5
*.onnx
*.weights
*.ckpt

# Data and output
runs/
output/
logs/

# Conda
conda-meta/

# VSCode
.vscode/

# PyCharm
.idea/

# Ignore test outputs
test_api_connection.py

tools/

# Ignore local config
local_config.py

# Ignore API tokens and secrets
*.token
*.secret

# Ignore backup files
*~
*.bak

# Ignore webapp static cache
code/webapp/static/cache/

# Ignore any files you want to keep private or that can be regenerated 